<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wlzq.activity.guess.dao.GuesssWinDetailDao">
    
	<sql id="guessWinColumns">
		a.id AS "id",
		a.activity_code AS "activityCode",
		a.type AS "type",
		a.time AS "time",
		a.user_id AS "userId",
		a.win_count AS "winCount",
		a.win_from_date AS "winFromDate",
		a.win_to_date AS "winToDate",
		a.win_dates AS "winDates",
		a.create_time AS "createTime",
		a.update_time AS "updateTime",
		a.remark AS "remark"
	</sql>
	
	<sql id="guessWinJoins">
	</sql>
    
	<select id="get" resultType="GuesssWinDetail">
		SELECT 
			<include refid="guessWinColumns"/>
		FROM act_guess_win_detail a
		<include refid="guessWinJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findLastWin" resultType="GuesssWinDetail">
		select * from (
		SELECT 
			<include refid="guessWinColumns"/>
		FROM act_guess_win_detail a
		<include refid="guessWinJoins"/>
		WHERE a.user_id = #{userId} AND a.activity_code = #{activityCode}
		 and a.time = #{time}
		 and a.type = #{type}
		 order by a.win_to_date desc
		) where	 rownum=1
	</select>
	
	<select id="findList" resultType="GuesssWin">
		SELECT 
			<include refid="guessWinColumns"/>
		FROM act_guess_win_detail a
		<include refid="guessWinJoins"/>
		<where>
			<if test="time != null and time != ''">
				AND a.time = #{time}
			</if>
			<if test="userId != null and userId != ''">
				AND a.user_id = #{userId}
			</if>
			<if test="winCount != null and winCount != ''">
				AND a.win_count = #{winCount}
			</if>
			<if test="winFromDate != null and winFromDate != ''">
				AND a.win_from_date = #{winFromDate}
			</if>
			<if test="winToDate != null and winToDate != ''">
				AND a.win_to_date = #{winToDate}
			</if>
		</where>
	</select>
	
	<select id="findAllList" resultType="GuesssWin">
		SELECT 
			<include refid="guessWinColumns"/>
		FROM act_guess_win_detail a
		<include refid="guessWinJoins"/>
		<where>
			
		</where>
	</select>
	
	
	<select id="rankingList" resultType="WinRanksDto">
		select *
		  from (select row_.*, rownum as "order"
		          from (select *
		                  from (select au.nick_name as "nickName",
		                               au.portrait as "portrait",
		                               nvl(b."win_count", 0) as "winCount",
		                               u.create_time as "registTime",
                                       u.mobile as "mobile"
		                          from (select a.user_id,
		                                           max(a.win_count) as "win_count"
		                                      from act_guess_win_detail a
		                                    <where>
			                                    <if test="win.type != null">
			                                       AND a.type = #{win.type}
			                                    </if>
			                                    <if test="win.activityCode != null and win.activityCode != ''">
			                                       AND a.activity_code = #{win.activityCode}
			                                    </if>
			                                    <if test="win.time != null">
			                                       <![CDATA[ and a.time = #{win.time} ]]>
			                                    </if>
			                                    
		                                    </where>
		                                     group by a.user_id) b
		                                     left join act_guess_user u on b.user_id = u.user_id
		                          left join acc_user au
		                            on b.user_id = au.user_id
		                          <where>
		                         		<if test="win.activityCode != null and win.activityCode != ''">
			                                AND u.activity_code = #{win.activityCode}
			                            </if>
		                          </where>)
		                 order by "winCount" desc,"registTime" asc) row_
		         WHERE <![CDATA[ rownum <= #{end} ]]>
		         )
		 WHERE "order" > #{start}
	</select>
	
	<select id="ranking" resultType="WinRanksDto">
		select *
	        from (select row_.*, rownum as "order"
	                from (select *
	                        from (select au.nick_name as "nickName",
	                                     au.portrait as "portrait",
	                                     b.user_id ,
	                                     nvl(b."win_count", 0) as "winCount",
	                                     u.create_time as "registTime"
	                                from (select a.user_id,
	                                                 max(a.win_count) as "win_count"
	                                            from act_guess_win_detail a
	                                          	where a.type = #{type}
	                                          	and a.time = #{time}
	                                           group by a.user_id) b
	                                           left join act_guess_user u on b.user_id = u.user_id
	                                left join acc_user au
	                                  on b.user_id = au.user_id
			                          <where>
			                         		<if test="win.activityCode != null and win.activityCode != ''">
				                                AND u.activity_code = #{win.activityCode}
				                            </if>
			                          </where>)
	                                  
	                       order by "winCount" desc,"registTime" asc) row_
	               )
	       WHERE  user_id=#{userId}
	</select>
	
	<select id="rankingCount" resultType="java.lang.Long">
		select nvl(count(distinct(a.user_id)),0) from act_guess_win_detail a where a.type = #{type}
	                                          	and a.time = #{time}
	</select>
	
	<insert id="insert"  useGeneratedKeys="true" keyColumn="ID" keyProperty="id">
		INSERT INTO act_guess_win_detail(
			activity_code,
			type,
			time,
			user_id,
			win_count,
			win_from_date,
			win_to_date,
			win_dates,
			create_time,
			remark
		) VALUES (
			#{activityCode},
			#{type},
			#{time},
			#{userId},
			#{winCount},
			#{winFromDate},
			#{winToDate},
			#{winDates},
			#{createTime},
			#{remark,jdbcType=VARCHAR}
		)
	</insert>
	
	<update id="update">
		UPDATE act_guess_win_detail SET 	
			activity_code = #{activityCode},
			win_count = #{winCount},
			win_from_date = #{winFromDate},
			win_to_date = #{winToDate},
			win_dates = #{winDates},
			update_time = #{updateTime,jdbcType=TIMESTAMP},
			remark = #{remark,jdbcType=VARCHAR}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM act_guess_win_detail
		WHERE id = #{id}
	</update>
	
</mapper>